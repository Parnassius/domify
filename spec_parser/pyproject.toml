[project]
name = "spec_parser"
version = "0.1.0"
requires-python = ">=3.9"
dependencies = [
    "beautifulsoup4[html5lib]==4.14.2",
    "requests==2.32.5",
]

[project.scripts]
parse = "spec_parser.parser:parse"

[dependency-groups]
dev = [
    "mypy==1.18.2",
    "ruff==0.13.3",
    "types-requests==2.32.4.20250913",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.mypy]
python_version = "3.9"
strict = true

# Disallow dynamic typing
#disallow_any_unimported = true
#disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true

show_error_codes = true
warn_unreachable = true


[tool.ruff.lint]
select = [
    "A",     # flake8-builtins
    "ANN",   # flake8-annotations
    "ARG",   # flake8-unused-arguments
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "E",     # pycodestyle
    "EM",    # flake8-errmsg
    "F",     # pyflakes
    "FURB",  # refurb
    "I",     # isort
    "ICN",   # flake8-import-conventions
    "INP",   # flake8-no-pep420
    "ISC",   # flake8-implicit-str-concat
    "N",     # pep8-naming
    "PERF",  # perflint
    "PGH",   # pygrep-hooks
    "PT",    # flake8-pytest-style
    "PTH",   # flake8-use-pathlib
    "RET",   # flake8-return
    "RSE",   # flake8-raise
    "RUF",   # Ruff-specific rules
    "SIM",   # flake8-simplify
    "SLF",   # flake8-self
    "T10",   # flake8-debugger
    "TC",    # flake8-type-checking
    "TID",   # flake8-tidy-imports
    "TRY",   # tryceratops
    "UP",    # pyupgrade
    "W",     # pycodestyle
    "YTT",   # flake8-2020
]
ignore = [
    "A003",  # builtin-attribute-shadowing
    "TC001", # typing-only-first-party-import
    "TC002", # typing-only-third-party-import
    "TC003", # typing-only-standard-library-import
]
fixable = [
    "I",     # isort
    "F401",  # unused-import
    "TC",    # flake8-type-checking
    "TID",   # flake8-tidy-imports
    "UP",    # pyupgrade
]
dummy-variable-rgx = "^_$"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
split-on-trailing-comma = false

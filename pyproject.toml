[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.coverage.report]
exclude_lines = [
    "# pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
]

[tool.coverage.run]
source = ["domify"]


[tool.isort]
profile = "black"


[tool.mypy]
python_version = "3.7"
strict = true

# Disallow dynamic typing
disallow_any_unimported = true
disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true

show_error_codes = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
# pytest decorators leave functions untyped after transformation
disallow_any_decorated = false
disallow_any_explicit = false
disallow_untyped_defs = false
disallow_incomplete_defs = false


[tool.poe.tasks]
format = ["isort", "black"]
isort = "isort domify tests"
black = "black domify tests"

tests = ["test"]
test = ["isort-check", "black-check", "darglint", "mypy", "pylint", "pytest"]
isort-check = "isort domify tests --check"
black-check = "black domify tests --check"
darglint = "darglint domify tests -v 2"
mypy = "mypy domify tests"
pylint = "pylint domify tests --disable=fixme"
pytest = [
    {cmd="coverage erase"},
    {cmd="tox run"},
    {cmd="coverage report --skip-covered --fail-under=100"},
]
pytest-ci = "pytest --cov --cov-report=xml"

release = [
    "_check_uncommited_changes",
    "_check_not_dev_version",
    "test",
    "_create_tag",
    "_create_dev_commit",
]
_check_uncommited_changes = [
    {cmd="git diff --quiet"},
    {cmd="git diff --cached --quiet"},
]
_check_not_dev_version = {shell='case "$(poetry version --short)" in *-dev) false; esac'}
_create_tag = {shell='git tag "$(poetry version --short)"'}
_create_dev_commit = [
    {shell="poetry version patch --quiet"},
    {shell='poetry version "$(poetry version --short)-dev" --quiet'},
    {shell='git commit pyproject.toml --message "Bump version to $(poetry version --short)"'},
]


[tool.poetry]
name = "domify"
version = "0.4.0"
description = "HTML generator using pure Python"
authors = ["Parnassius <Parnassius@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/Parnassius/domify"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Text Processing :: Markup :: HTML",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.7.2"
typing-extensions = {version=">=3.7", python="<3.8"}

[tool.poetry.group.dev.dependencies]
black = "22.12.0"
darglint = "1.8.1"
isort = "5.10.1"
mypy = {version="0.991", markers="python_version > '3.7' or implementation_name == 'cpython'"}
poethepoet = "0.16.5"
pylint = "2.15.8"
pytest = "7.2.0"
pytest-cov = "4.0.0"
tox = "4.0.5"


[tool.pylint.master]
py-version = "3.7"
load-plugins = [
    "pylint.extensions.bad_builtin",
    "pylint.extensions.check_elif",
    "pylint.extensions.typing",
]

[tool.pylint.messages_control]
disable = [
    "invalid-name",
    "missing-module-docstring",
    "useless-import-alias",
]
enable = ["useless-suppression"]
fail-on = ["useless-suppression"]

[tool.pylint.format]
expected-line-ending-format = "LF"
max-line-length = "88"


[tool.tox]
legacy_tox_ini = """
[tox]
env_list = py{37,38,39,310,311}, pypy{37,38,39}
skip_missing_interpreters = true

[testenv]
deps =
    pytest
    pytest-cov
commands = pytest --cov --cov-append --cov-report=html
"""

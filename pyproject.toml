[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[project]
name = "domify"
description = "HTML generator using pure Python"
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
authors = [
    {name="Parnassius", email="Parnassius@users.noreply.github.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Text Processing :: Markup :: HTML",
    "Typing :: Typed",
]
dependencies = [
    "typing-extensions>=3.7; python_version<'3.8'",
]
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/Parnassius/domify"


[tool.hatch.build]
packages = ["domify"]

[tool.hatch.envs.default]
skip-install = true

[tool.hatch.envs.default.scripts]
isort = "hatch run lint:isort domify tests {args}"
black = "hatch run lint:black domify tests {args}"
format = ["isort", "black"]

darglint = "hatch run lint:darglint domify tests -v 2 {args}"
mypy = "hatch run lint:mypy domify tests {args}"
pylint = "hatch run lint:pylint domify tests --disable=fixme {args}"
pytest = "hatch run test:pytest {args}"
pytest-ci = "hatch run +py={args} test:pytest --cov --cov-report=xml"
all = ["format", "darglint", "mypy", "pylint", "pytest"]

_check_uncommited_changes = [
    "git diff --quiet",
    "git diff --cached --quiet",
]
_check_not_dev_version = 'case "$(hatch version)" in *dev*) false; esac'
_create_tag = 'git tag "$(hatch version)"'
_create_dev_commit = [
    "hatch version patch,dev",
    'git commit domify/__about__.py --message "Bump version to $(hatch version)"',
]
release = [
    "_check_uncommited_changes",
    "_check_not_dev_version",
    "isort --check",
    "black --check",
    "all",
    "_create_tag",
    "_create_dev_commit",
]

[tool.hatch.envs.lint]
template = "lint"
dependencies = [
    "black==23.1.0",
    "darglint==1.8.1",
    "isort==5.12.0",
    "mypy==0.991",
    "pylint==2.16.1",
    "pytest==7.2.1",
]

[tool.hatch.envs.test]
template = "test"
dependencies = [
    "pytest==7.2.1",
    "pytest-cov==4.0.0",
    "typing-extensions==3.7.2",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11", "pypy3.7", "pypy3.8", "pypy3.9"]

[tool.hatch.version]
path = "domify/__about__.py"


[tool.coverage.report]
exclude_lines = [
    "# pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
]

[tool.coverage.run]
source = ["domify"]
omit = ["domify/__about__.py"]


[tool.isort]
profile = "black"


[tool.mypy]
python_version = "3.7"
strict = true

# Disallow dynamic typing
disallow_any_unimported = true
disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true

show_error_codes = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
# pytest decorators leave functions untyped after transformation
disallow_any_decorated = false
disallow_any_explicit = false
disallow_untyped_defs = false
disallow_incomplete_defs = false


[tool.pylint.main]
py-version = "3.7"
load-plugins = [
    "pylint.extensions.bad_builtin",
    "pylint.extensions.check_elif",
    "pylint.extensions.for_any_all",
    "pylint.extensions.typing",
]

[tool.pylint.messages_control]
disable = [
    # basic
    "invalid-name",
    "missing-function-docstring",
    "missing-module-docstring",

    # imports
    "useless-import-alias",
]
enable = ["useless-suppression"]
fail-on = ["useless-suppression"]

[tool.pylint.format]
expected-line-ending-format = "LF"
max-line-length = "88"

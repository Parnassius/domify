[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[project]
name = "domify"
description = "HTML generator using pure Python"
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
authors = [
    {name="Parnassius", email="Parnassius@users.noreply.github.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Text Processing :: Markup :: HTML",
    "Typing :: Typed",
]
dependencies = [
    "typing-extensions>=3.7; python_version<'3.8'",
]
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/Parnassius/domify"


[tool.hatch.build]
packages = ["domify"]

[tool.hatch.envs.default]
skip-install = true

[tool.hatch.envs.default.scripts]
ruff-fix = "hatch run lint:ruff domify tests --fix-only --exit-zero {args}"
black = "hatch run lint:black domify tests {args}"
format = ["ruff-fix", "black"]

darglint = "hatch run lint:darglint domify tests -v 2 {args}"
mypy = "hatch run lint:mypy domify tests {args}"
ruff = "hatch run lint:ruff domify tests {args}"
pytest = "hatch run test:pytest {args}"
pytest-ci = "hatch run +py={args} test:pytest --cov --cov-report=xml"
all = ["format", "darglint", "mypy", "ruff", "pytest"]

_check_uncommited_changes = [
    "git diff --quiet",
    "git diff --cached --quiet",
]
_check_not_dev_version = 'case "$(hatch version)" in *dev*) false; esac'
_create_tag = 'git tag "$(hatch version)"'
_create_dev_commit = [
    "hatch version patch,dev",
    'git commit domify/__about__.py --message "Bump version to $(hatch version)"',
]
release = [
    "_check_uncommited_changes",
    "_check_not_dev_version",
    "all",
    "_check_uncommited_changes",
    "_create_tag",
    "_create_dev_commit",
]

[tool.hatch.envs.lint]
template = "lint"
dependencies = [
    "black==23.3.0",
    "darglint==1.8.1",
    "mypy==1.3.0",
    "pytest==7.3.1",
    "ruff==0.0.270",
]

[tool.hatch.envs.test]
template = "test"
dependencies = [
    "pytest==7.3.1",
    "pytest-cov==4.1.0",
    "typing-extensions==3.7.2; python_version<'3.8'",
]

[[tool.hatch.envs.test.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "pypy3.7", "pypy3.8", "pypy3.9"]

[tool.hatch.version]
path = "domify/__about__.py"


[tool.coverage.report]
exclude_lines = [
    "# pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
]

[tool.coverage.run]
source = ["domify"]
omit = ["domify/__about__.py"]


[tool.mypy]
python_version = "3.7"
strict = true

# Disallow dynamic typing
disallow_any_unimported = true
disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true

show_error_codes = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "tests.*"
# pytest decorators leave functions untyped after transformation
disallow_any_decorated = false
disallow_any_explicit = false
disallow_untyped_defs = false
disallow_incomplete_defs = false


[tool.ruff]
target-version = "py37"
select = [
    "A",     # flake8-builtins
    "ARG",   # flake8-unused-arguments
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "E",     # pycodestyle
    "EM",    # flake8-errmsg
    "F",     # pyflakes
    "I",     # isort
    "ICN",   # flake8-import-conventions
    "ISC",   # flake8-implicit-str-concat
    "N",     # pep8-naming
    "PGH",   # pygrep-hooks
    "PTH",   # flake8-use-pathlib
    "RET",   # flake8-return
    "RUF",   # Ruff-specific rules
    "T10",   # flake8-debugger
    "TID",   # flake8-tidy-imports
    "TRY",   # tryceratops
    "UP",    # pyupgrade
    "W",     # pycodestyle
    "YTT",   # flake8-2020
]
ignore = [
    "A003",  # builtin-attribute-shadowing
]
fixable = [
    "I",     # isort
    "F401",  # unused-import
    "TID",   # flake8-tidy-imports
    "UP",    # pyupgrade
]
dummy-variable-rgx = "^_$"
ignore-init-module-imports = true

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]
split-on-trailing-comma = false
